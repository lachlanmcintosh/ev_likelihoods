

# This file was *autogenerated* from the file make_combos.sage
from sage.all_cmdline import *   # import sage library

_sage_const_128 = Integer(128); _sage_const_129 = Integer(129); _sage_const_0 = Integer(0); _sage_const_9 = Integer(9); _sage_const_10 = Integer(10); _sage_const_17 = Integer(17); _sage_const_2 = Integer(2); _sage_const_20 = Integer(20); _sage_const_33 = Integer(33); _sage_const_4 = Integer(4); _sage_const_40 = Integer(40); _sage_const_65 = Integer(65); _sage_const_8 = Integer(8); _sage_const_80 = Integer(80); _sage_const_16 = Integer(16); _sage_const_1 = Integer(1); _sage_const_3 = Integer(3)
length = _sage_const_128 
all_paths = []
for i in range(_sage_const_129 ):
    all_paths.append(str(i))

G1 = list(range(_sage_const_0 ,_sage_const_129 ))# + [128]

for i in range(len(G1)):
    for j in range(len(G1)):
        if G1[i] + G1[j] <= length:
            all_paths.append(str(G1[i]) + "G" + str(G1[j])) 

G2 = list(range(_sage_const_0 ,_sage_const_9 ))+list(range(_sage_const_10 ,_sage_const_17 ,_sage_const_2 ))+list(range(_sage_const_20 ,_sage_const_33 ,_sage_const_4 )) + list(range(_sage_const_40 ,_sage_const_65 ,_sage_const_8 )) + list(range(_sage_const_80 ,_sage_const_129 ,_sage_const_16 )) #[32,64,128] #list(range(6,12,2))+list(range(20,110,10))
       
print(G2)
 
for i in range(len(G2)):
    for j in range(len(G2)):
        for k in range(len(G2)):
            if G2[i] + G2[j] + G2[k] <= length:
                all_paths.append(str(G2[i]) + "G" + str(G2[j]) + "G" + str(G2[k])) 

G2 = set(G2)

print(G2)
print(len([x for x in all_paths if len(x.split("G")) == _sage_const_1 ]))
print(len([x for x in all_paths if len(x.split("G")) == _sage_const_2 ]))
print(len([x for x in all_paths if len(x.split("G")) == _sage_const_3 ]))
print(len([x for x in all_paths]))

# save the like of all combinations that we wantto make

save(all_paths,"all_path_combinations_p128_v3")
save([G1,G2],"all_path_combinations_p128_v3_lists")


